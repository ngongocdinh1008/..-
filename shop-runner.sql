-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.category
(
    id bigserial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT category_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.color
(
    id bigserial NOT NULL,
    color character varying(255) COLLATE pg_catalog."default" NOT NULL,
    product_id bigint,
    CONSTRAINT color_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.images
(
    id bigserial NOT NULL,
    image_url character varying(255) COLLATE pg_catalog."default",
    product_id bigint,
    CONSTRAINT images_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_item
(
    id bigserial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    price integer NOT NULL DEFAULT 0,
    discount integer DEFAULT 1,
    sum_price double precision,
    description character varying(255) COLLATE pg_catalog."default",
    "isFavorite" boolean,
    order_id bigint,
    quantity integer DEFAULT 1,
    is_favorite boolean NOT NULL,
    CONSTRAINT order_item_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    id bigint NOT NULL DEFAULT 0,
    order_date timestamp without time zone,
    temporary_price double precision NOT NULL,
    total_discount double precision NOT NULL,
    total_price double precision NOT NULL,
    user_id bigint,
    CONSTRAINT orders_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.orders_items
(
    order_id bigint NOT NULL,
    items_id bigint NOT NULL,
    CONSTRAINT uk7qrg5pfgjon82yhgwfqrdijm5 UNIQUE (items_id)
);

CREATE TABLE IF NOT EXISTS public.product
(
    id bigserial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    price integer NOT NULL DEFAULT 0,
    discount integer DEFAULT 1,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    category_id bigint,
    order_id bigint,
    s_price double precision NOT NULL DEFAULT 0,
    is_favorite boolean DEFAULT false,
    CONSTRAINT product_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.role
(
    id bigserial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT role_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.size
(
    id bigserial NOT NULL,
    size character varying(255) COLLATE pg_catalog."default",
    product_id bigint,
    CONSTRAINT size_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.social_account
(
    id bigserial NOT NULL,
    provider character varying(255) COLLATE pg_catalog."default",
    provider_id character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    users_id bigint,
    CONSTRAINT social_account_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tokens
(
    id bigserial NOT NULL,
    token character varying(255) COLLATE pg_catalog."default",
    refresh_token character varying(255) COLLATE pg_catalog."default",
    "tokenType" character varying(50) COLLATE pg_catalog."default",
    is_mobile boolean,
    user_id bigint,
    expired boolean NOT NULL,
    revoked boolean NOT NULL,
    token_type character varying(50) COLLATE pg_catalog."default",
    expiration_date timestamp without time zone,
    refresh_expiration_date timestamp without time zone,
    CONSTRAINT tokens_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id bigserial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    google_account_id integer,
    role_id bigint,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.color
    ADD CONSTRAINT color_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.images
    ADD CONSTRAINT fk8sfun6tj1hqb85ed52o8mkqyh FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_item
    ADD CONSTRAINT order_item_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk32ql8ubntj5uh44ph9659tiih FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders_items
    ADD CONSTRAINT fkij1wwgx6o198ubsx1oulpopem FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders_items
    ADD CONSTRAINT fkl3w3fx5rbjq0tbb2i0xidwabh FOREIGN KEY (items_id)
    REFERENCES public.order_item (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS uk7qrg5pfgjon82yhgwfqrdijm5
    ON public.orders_items(items_id);


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT product_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT product_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.order_item (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.size
    ADD CONSTRAINT size_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.social_account
    ADD CONSTRAINT social_account_users_id_fkey FOREIGN KEY (users_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tokens
    ADD CONSTRAINT tokens_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_users_role FOREIGN KEY (role_id)
    REFERENCES public.role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;